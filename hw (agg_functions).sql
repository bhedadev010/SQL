#From the following table, write a SQL query to calculate total purchase amount of all orders. Return total purchase amount.
select sum(tops.orders.purch_amt) as tot_amt from orders;

#From the following table, write a SQL query to calculate the average purchase amount of all orders. Return average purchase amount.
select avg(orders.purch_amt) as avg_amt from orders;

#From the following table, write a SQL query that counts the number of unique salespeople. Return number of salespeople.
select count(distinct salesman_id) from orders;

#From the following table, write a SQL query to count the number of customers. Return number of customers.
select count(customer_id) from orders;

#From the following table, write a SQL query to determine the number of customers who received at least one grade for their activity.
select count(distinct customer_id) from customer
where grade >= 1;  -- OR grade is not null;

#From the following table, write a SQL query to find the maximum purchase amount.
select max(purch_amt) from orders;

#From the following table, write a SQL query to find the minimum purchase amount.
select min(purch_amt) from orders;

#From the following table, write a SQL query to find the highest grade of the customers in each city. Return city, maximum grade.
select distinct city,max(grade) from customer
group by city;

#From the following table, write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount.
select distinct customer_id, max(purch_amt) from orders
group by customer_id;

#From the following table, write a SQL query to find the highest purchase amount ordered by each customer on a particular date. Return, order date and highest purchase amount.
select max(purch_amt), ord_date from orders
where ord_date = '2012-10-10 00:00:00'
group by customer_id;

#From the following table, write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'. Return salesperson ID, purchase amount
select max(purch_amt), salesman_id from orders
where ord_date = '2012-08-17'
group by salesman_id;

#From the following table, write a SQL query to find the highest order (purchase) amount by each customer on a particular order date. Filter the result by highest order 
#(purchase) amount above 2000.00. Return customer id, order date and maximum purchase amount.
select customer_id, ord_date, max(purch_amt) 
from orders
where purch_amt > 2000 and ord_date = '2012-04-25'
group by customer_id;

#From the following table, write a SQL query to find the maximum order (purchase) amount in the range 2000 - 6000 (Begin and end values are included.) by combination of 
#each customer and order date. Return customer id, order date and maximum purchase amount.
SELECT customer_id, 
       ord_date, 
       MAX(purch_amt) AS max_purchase_amount
FROM Orders
WHERE purch_amt BETWEEN 2000 AND 6000
GROUP BY customer_id, ord_date;

#From the following table, write a SQL query to find the maximum order (purchase) amount based on the combination of each customer and order date. Filter the rows for 
#maximum order (purchase) amount is either 2000, 3000, 5760, 6000. Return customer id, order date and maximum purchase amount
select customer_id,ord_date, max(purch_amt) as max_purch
from orders
group by customer_id, ord_date
having max(purch_amt) in (2000,3000,5760,6000); 

#From the following table, write a SQL query to determine the maximum order amount for each customer. The customer ID should be in the range 3002 and 3007(Begin and end 
#values are included.). Return customer id and maximum purchase amount.
select customer_id, max(purch_amt)
from orders
where customer_id between 3002 and 3007
group by customer_id;

#From the following table, write a SQL query to find the maximum order (purchase) amount for each customer. The customer ID should be in the range 3002 and 3007(Begin and 
#end values are included.). Filter the rows for maximum order (purchase) amount is higher than 1000. Return customer id and maximum purchase amount.
select customer_id, max(purch_amt) as max_purch
from orders
where (customer_id between 3002 and 3007)
group by customer_id
having max(purch_amt) > 1000;

#From the following table, write a SQL query to determine the maximum order (purchase) amount generated by each salesperson. Filter the rows for the salesperson ID is in the 
#range 5003 and 5008 (Begin and end values are included.). Return salesperson id and maximum purchase amount
select salesman_id, max(purch_amt) as max_purch
from orders
where salesman_id between 5003 and 5008
group by salesman_id;

#From the following table, write a SQL query to count all the orders generated on '2012-08-17'. Return number of orders.
select count(ord_no) as numoforders
from orders
where ord_date = '2012-08-17';

#From the following table, write a SQL query to count the number of salespeople in a city. Return number of salespeople.
select count(distinct salesman_id) as numofsm
from orders;

#From the following table, write a SQL query to count the number of orders based on the combination of each order date and salesperson. Return order date, salesperson id.
select ord_date, salesman_id, count(ord_no) 
from orders
group by ord_date, salesman_id;

#From the following table, write a SQL query to calculate the average product price. Return average product price.
select avg(purch_amt) as avg_prod_price
from orders;

#From the following table, write a SQL query to count the number of products whose price are higher than or equal to 350. Return number of products.
select count(purch_amt) as num_of_prod
from orders
where purch_amt >=350;

#From the following table, write a SQL query to count the number of employees in each department. Return department code and number of employees.
select EMP_DEPT, count(EMP_DEPT)
from employee_details
group by EMP_DEPT;

